// Copyright (c) 2014-2016 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

VK_DEFINE_NON_DISPATCHABLE_HANDLE(3)
====================================

Name
----
VK_DEFINE_NON_DISPATCHABLE_HANDLE - Declare a non-dispatchable object handle

C Specification
---------------

// refBegin VK_DEFINE_NON_DISPATCHABLE_HANDLE - Declare a non-dispatchable object handle

dname:VK_DEFINE_NON_DISPATCHABLE_HANDLE defines a
<<fundamentals-objectmodel-overview, non-dispatchable handle>> type.

include::../api/defines/VK_DEFINE_NON_DISPATCHABLE_HANDLE.txt[]


Description
-----------

  * pname:object is the name of the resulting C type.

Most Vulkan handle types, such as slink:VkBuffer, are non-dispatchable.

[NOTE]
.Note
==================
The +vulkan.h+ header allows the dname:VK_DEFINE_NON_DISPATCHABLE_HANDLE definition
to be overridden by the application. If dname:VK_DEFINE_NON_DISPATCHABLE_HANDLE is
already defined when the +vulkan.h+ header is compiled the default definition is skipped.
This allows the application to define a binary-compatible custom handle which may:
provide more type-safety or other features needed by the application. Behavior is
undefined if the application defines a non-binary-compatible handle and may: result
in memory corruption or application termination. Binary compatibility is platform
dependent so the application must: be careful if it overrides the default
dname:VK_DEFINE_NON_DISPATCHABLE_HANDLE definition.
==================

// refEnd VK_DEFINE_NON_DISPATCHABLE_HANDLE VkBuffer


See Also
--------

slink:VkBuffer


Document Notes
--------------

For more information, see the Vulkan Specification at URL

https://www.khronos.org/registry/vulkan/specs/1.0/xhtml/vkspec.html#VK_DEFINE_NON_DISPATCHABLE_HANDLE

This page is extracted from the Vulkan Specification.
Fixes and changes should be made to the Specification,not directly.

include::footer.txt[]

