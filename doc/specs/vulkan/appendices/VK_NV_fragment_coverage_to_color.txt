[[VK_NV_fragment_coverage_to_color]]
== VK_NV_fragment_coverage_to_color
*Name String*::
    VK_NV_fragment_coverage_to_color
*Extension Type*::
    Device extension
*Registered Extension Number*::
    150
*Status*::
    Complete
*Last Modified Data*::
    2017-05-21
*Revision*::
    1
*Dependencies*::
    - This extension is written against version 1.0 of the Vulkan API.
    - This extension requires Vulkan 1.0.
*Contributors*::
    - Jeff Bolz, NVIDIA
*Contact*::
    - Jeff Bolz (jbolz 'at' nvidia.com)
*Overview*::
+
--
This extension allows the fragment coverage value, represented as an integer
bitmask, to be substituted for a color output being written to a
single-component color attachment with integer components (e.g.
ename:VK_FORMAT_R8_UINT).
The functionality provided by this extension is different from simply
writing the code:SampleMask fragment shader output, in that the coverage
value written to the framebuffer is taken after stencil test and depth test,
as well as after fragment operations such as alpha-to-coverage.

This functionality may be useful for deferred rendering algorithms, where
the second pass needs to know which samples belong to which original
fragments.
--

=== New Object Types
None.

=== New Enum Constants
  * Extending elink:VkStructureType:

  ** ename:VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV

=== New Enums
  * elink:VkPipelineCoverageToColorStateCreateFlagsNV

=== New Structures
  * slink:VkPipelineCoverageToColorStateCreateInfoNV

=== New Functions
None.

=== Issues
None.

=== Version History
  * Revision 1, 2017-05-21 (Jeff Bolz)
    - Internal revisions
