[[VK_EXT_swapchain_colorspace]]
== VK_EXT_swapchain_colorspace

*Name String*::
    +VK_EXT_swapchain_colorspace+
*Extension Type*::
    Instance
*Registered Extension Number*::
    105
*Last Modified Date*::
    2017-01-13
*Revision*::
    1
*IP Status*::
    No known IP claims.
*Dependencies*::
  - This extension is written against version 1.0 of the Vulkan API.
  - This extension requires +VK_KHR_surface+
*Contributors*::
  - Courtney Goeltzenleuchter, Google
*Contacts*::
  - Courtney Goeltzenleuchter, Google

This extension defines enums for elink:VkColorSpaceKHR that correspond to
the following color spaces::

[[VK_EXT_swapchain_colorspace-table]]
.Color Spaces and Attributes
[options="header"]
|====
| Name       | Red Primary  | Green Primary | Blue Primary | White-point          | OETF
| DCI-P3     | 0.680, 0.320 | 0.265, 0.690  | 0.150, 0.060 | 0.3127, 0.3290 (D65) | Gamma 2.6
| Display-P3 | 0.680, 0.320 | 0.265, 0.690  | 0.150, 0.060 | 0.3127, 0.3290 (D65) | sRGB
| BT709      | 0.640, 0.330 | 0.300, 0.600  | 0.150, 0.060 | 0.3127, 0.3290 (D65) | SMPTE 170M
| sRGB       | 0.640, 0.330 | 0.300, 0.600  | 0.150, 0.060 | 0.3127, 0.3290 (D65) | sRGB
| scRGB      | 0.640, 0.330 | 0.300, 0.600  | 0.150, 0.060 | 0.3127, 0.3290 (D65) | scRGB
| BT2020     | 0.708, 0.292 | 0.170, 0.797  | 0.131, 0.046 | 0.3127, 0.3290 (D65) | SMPTE 170M
| AdobeRGB   | 0.640, 0.330 | 0.210, 0.710  | 0.150, 0.060 | 0.3127, 0.3290 (D65) | Gamma 2.2
|====

For Opto-Electrical Transfer Function (OETF), unless otherwise specified,
the values of [eq]#L# and [eq]#E# are defined as:

[eq]#L# - luminance of image [eq]#0 {leq} L {leq} 1# for conventional
colorimetry

[eq]#E# - corresponding electrical signal (value stored in memory)

=== sRGB OETF

[latexmath]
+++++++++++++++++++
\[ \begin{aligned}
E & =
  \begin{cases}
    1.055 \times L^{1 \over 2.4} - 0.055 & \text{for } 0.0031308 \leq L \leq 1 \\
    12.92 \times L                       & \text{for } 0 \leq L < 0.0031308
  \end{cases}
\end{aligned} \]
+++++++++++++++++++

=== scRGB OETF

[latexmath]
+++++++++++++++++++
\[ \begin{aligned}
E & =
  \begin{cases}
    1.055 \times L^{1 \over 2.4} - 0.055 & \text{for } 0.0031308 \leq L \leq 7.5913 \\
    12.92 \times L                       & \text{for } 0 \leq L < 0.0031308 \\
    -E \times -L                         & \text{for } L < 0
  \end{cases}
\end{aligned} \]
+++++++++++++++++++

[eq]#L# - luminance of image is within [eq]#[-0.6038, 7.5913]#.

[eq]#E# can be negative and/or > 1.
That is how scRGB specifies colors outside the standard sRGB gamut.

=== SMPTE 170M OETF

[latexmath]
+++++++++++++++++++
\[ \begin{aligned}
E & =
  \begin{cases}
    1.099 \times L^0.45 - 0.099          & \text{for } 0.018 \leq L \leq 1 \\
    4.5 \times L                         & \text{for } 0 \leq L < 0.018
  \end{cases}
\end{aligned} \]
+++++++++++++++++++

=== Display Gamma 2.2 OETF

latexmath:[$E = L^{1 \over 2.2}$]

=== Display Gamma 2.6 OETF

latexmath:[$E = L^{1 \over 2.6}$]

An implementation supporting this extension indicates support for these
color spaces via slink:VkSurfaceFormatKHR structures returned from
flink:vkGetPhysicalDeviceSurfaceFormatsKHR.

Specifying the supported surface color space when calling
flink:vkCreateSwapchainKHR will create a swapchain using that color space.

Vulkan requires that all implementations support the sRGB OETF and EOTF when
using an SRGB pixel format.
Other transfer functions, such as SMPTE 170M, must not: be performed by the
implementation, but can: be performed by the application shader.

=== New Enum Constants

  * Extending elink:VkColorSpaceKHR:
  ** ename:VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT - supports the Display-P3
     color space and applies a linear OETF.
  ** ename:VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT - supports the Display-P3
     color space and applies the sRGB OETF.
  ** ename:VK_COLOR_SPACE_SCRGB_LINEAR_EXT - supports the scRGB color space
     and applies a linear OETF.
  ** ename:VK_COLOR_SPACE_SCRGB_NONLINEAR_EXT - supports the scRGB color
     space and applies the scRGB OETF.
  ** ename:VK_COLOR_SPACE_DCI_P3_LINEAR_EXT - supports the DCI-P3 color
     space and applies a linear OETF.
  ** ename:VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT - supports the DCI-P3 color
     space and applies the Gamma 2.6 OETF.
  ** ename:VK_COLOR_SPACE_BT709_LINEAR_EXT - supports the BT709 color space
     and applies a linear OETF.
  ** ename:VK_COLOR_SPACE_BT709_NONLINEAR_EXT - supports the BT709 color
     space and applies the SMPTE 170M OETF.
  ** ename:VK_COLOR_SPACE_BT2020_LINEAR_EXT - supports the BT2020 color
     space and applies a linear OETF.
  ** ename:VK_COLOR_SPACE_BT2020_NONLINEAR_EXT - supports the BT2020 color
     space and applies the SMPTE 170M OETF.
  ** ename:VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT - supports the AdobeRGB color
     space and applies a linear OETF.
  ** ename:VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT - supports the AdobeRGB
     color space and applies the Gamma 2.2 OETF.

=== Issues

1) Does the spec need to specify which kinds of image formats support the
color spaces?

*RESOLVED*: Pixel format is independent of color space (though some color
spaces really want / need floating point color components to be useful).
Therefore, do not plan on documenting what formats support which
colorspaces.
An application can: call flink:vkGetPhysicalDeviceSurfaceFormatsKHR to query
what a particular implementation supports.

2) How does application determine if HW supports appropriate transfer
function for a colorspace?

*RESOLVED*: Extension indicates that implementation must: not do the OETF
encoding if it's not sRGB.
That responsibility falls to the application shaders.

=== Version History

  * Revision 1, 2016-12-27 (Courtney Goeltzenleuchter)
    - Initial version
